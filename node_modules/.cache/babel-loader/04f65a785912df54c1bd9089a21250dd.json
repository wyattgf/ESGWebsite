{"ast":null,"code":"var _jsxFileName = \"/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js\";\nimport React, { Component } from 'react';\nimport { Grid, GridColumn, GridRow } from 'semantic-ui-react';\nimport { WindowContext } from './WindowContext';\nexport default class GridColumnSections extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columnsPerRow: 1,\n      classNombre: 'leftCentered'\n    };\n    this.sectionMap = new Map();\n  }\n\n  setMap(map) {\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow) {\n    this.setState({\n      columnsPerRow: perRow\n    });\n  }\n\n  setClassName(className) {\n    this.setState({\n      classNombre: className\n    });\n  }\n\n  getClassName() {\n    return this.classNombre;\n  }\n\n  createColumns() {\n    var index = 0;\n    var columns = [];\n\n    for (let key of this.sectionMap.keys()) {\n      columns[index] = /*#__PURE__*/React.createElement(GridColumn, {\n        key: key,\n        width: Math.round(12 / this.state.columnsPerRow),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, key), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, this.sectionMap.get(key)));\n      index += 1;\n    }\n\n    return columns;\n  }\n\n  createColumnRows(context) {\n    if (context.width < context.shrunkWidth) {\n      this.setColumnsPerRow(1);\n      this.setClassName('centerCentered');\n    }\n\n    console.log(this.state.columnsPerRow);\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i += this.state.columnsPerRow) {\n      rows[counter] = /*#__PURE__*/React.createElement(GridRow, {\n        key: counter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, columns.slice(i, i + this.state.columnsPerRow));\n      counter += 1;\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, rows);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WindowContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, props => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.getClassName(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, this.state.columnsPerRow, String(props.width < props.shrunkWidth), this.createColumnRows(props));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js"],"names":["React","Component","Grid","GridColumn","GridRow","WindowContext","GridColumnSections","state","columnsPerRow","classNombre","sectionMap","Map","setMap","map","setColumnsPerRow","perRow","setState","setClassName","className","getClassName","createColumns","index","columns","key","keys","Math","round","get","createColumnRows","context","width","shrunkWidth","console","log","counter","rows","i","length","slice","render","props","String"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Grid, GridColumn, GridRow} from 'semantic-ui-react';\nimport {WindowContext} from './WindowContext'\n\n\n\nexport default class GridColumnSections extends Component {\n  state = {columnsPerRow: 1, classNombre: 'leftCentered'}\n  sectionMap = new Map();\n\n  setMap(map){\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow){\n      this.setState({columnsPerRow: perRow})\n  }\n\n  setClassName(className){\n    this.setState({classNombre: className})\n  }\n\n  getClassName(){\n    return this.classNombre;\n  }\n\n  createColumns(){\n    var index = 0;\n    var columns = []\n    for (let key of this.sectionMap.keys()){\n        columns[index] = (\n          <GridColumn key={key} width={Math.round(12/this.state.columnsPerRow)}>\n           \n              <h3>{key}</h3> <br/>\n              <div>{this.sectionMap.get(key)}</div>\n             \n          </GridColumn>\n        )\n        index+=1;\n    }\n    return columns;\n  }\n\n  createColumnRows(context){\n    if (context.width < context.shrunkWidth){\n      this.setColumnsPerRow(1);\n      this.setClassName('centerCentered');\n    }\n    console.log(this.state.columnsPerRow)\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i+=this.state.columnsPerRow){\n  \n      rows[counter] = (\n        \n        <GridRow key={counter}>\n          {columns.slice(i,i+this.state.columnsPerRow)}\n        </GridRow>\n      )\n      counter+=1;\n    }\n    return <Grid>{rows}</Grid>;\n  }\n\n \n    render() {\n      return(\n        <div>\n\n        <WindowContext.Consumer>\n           {(props) => {\n            return(\n                <div className={this.getClassName()}> \n                {this.state.columnsPerRow}\n                    {String(props.width < props.shrunkWidth)}\n                  {this.createColumnRows(props)}\n                </div>\n            )\n           }}\n           </WindowContext.Consumer>\n           </div>\n      )\n      }\n    \n}\n\n  \n"]},"metadata":{},"sourceType":"module"}