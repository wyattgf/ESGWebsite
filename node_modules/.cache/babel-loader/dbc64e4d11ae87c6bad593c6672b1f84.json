{"ast":null,"code":"var _jsxFileName = \"/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/Tabs/Contact/PartnerWithPratt.js\";\nimport React, { Component } from 'react';\nimport { Segment, Button, GridRow, Grid } from 'semantic-ui-react';\nexport default class PartnerWithPratt extends Component {\n  constructor(...args) {\n    super(...args);\n    this.ESG_EMAIL = 'esgduke@gmail.com';\n    this.INDUSTRY_RELATIONS = 'matthew.jaynes@duke.edu';\n    this.STUDENT_GROUP_LIASION = 'nikita.suri@duke.edu';\n    this.PRESIDENT = 'polin.liu@duke.edu';\n    this.SUMMARY = ['Getting involved with ESG a great way to publicize your company, connect with Duke engineers, and', 'recruit. We offer several opportunities and events such as sponsorships, E-Socials, and E-Connects.', 'panies can also sponsor and support individual engineering clubs. There are many other ways to get ', 'involved and we encourage your company to contact us at esgduke@gmail.com or through the contact tab.'].join(' ');\n    this.EMAILS = [[this.ESG_EMAIL, 'Interested in Sponsorsing an E-Social', 'Hi!  I am FILL_IN_NAME who is interested in sponsorsing an E-Social with ESG.  Please let me know what steps I can take to get this done :)', this.INDUSTRY_RELATIONS, 'Host an E-Social'], [this.ESG_EMAIL, 'Interested in Helping Funding Clubs', 'Hi!  I am a representative of COMPANY_NAME_HERE, and we are interested in helping sponsor an engineering club at Duke.  Please let me know what steps I can take to get this done :)', this.STUDENT_GROUP_LIASION, 'Sponsor a Club'], [this.PRESIDENT, 'Seeking to Speak with ESG Executive President', '', this.ESG_EMAIL, 'Contact our President']];\n    this.emailMap = new Map([['E-Social', this.EMAILS[0]], ['Club Sponsor', this.EMAILS[1]], ['President', this.EMAILS[2]]]);\n    this.CONTENT = ['Our general contact email is esgduke@gmail.com', 'You can also contact individual board members', 'as well as the ESG President, Polin Liu Email: polin.liu [at] duke.edu'];\n  }\n\n  createEmail(info) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: \"center\",\n      rel: \"noopener noreferrer\",\n      href: this.createLink(info),\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 110\n      }\n    }, info[4]));\n  }\n\n  createLink(info) {\n    var to = info[0];\n    var cc = info[3];\n    var subject = info[1];\n    var body = info[2];\n    return 'mailto:' + to + '?cc=' + cc + '&subject=' + subject + '&body=' + body;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Segment, {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, this.CONTENT[0]), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.CONTENT[1]), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, this.CONTENT[2]), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.SUMMARY), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GridRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, this.createEmail(this.emailMap.get('E-Social')), this.createEmail(this.emailMap.get('Club Sponsor')), this.createEmail(this.emailMap.get('President')))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/Tabs/Contact/PartnerWithPratt.js"],"names":["React","Component","Segment","Button","GridRow","Grid","PartnerWithPratt","ESG_EMAIL","INDUSTRY_RELATIONS","STUDENT_GROUP_LIASION","PRESIDENT","SUMMARY","join","EMAILS","emailMap","Map","CONTENT","createEmail","info","createLink","to","cc","subject","body","render","get"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Segment, Button, GridRow, Grid} from 'semantic-ui-react'\n\nexport default class PartnerWithPratt extends Component {\n    ESG_EMAIL = 'esgduke@gmail.com';\n    INDUSTRY_RELATIONS = 'matthew.jaynes@duke.edu';\n    STUDENT_GROUP_LIASION = 'nikita.suri@duke.edu';\n    PRESIDENT = 'polin.liu@duke.edu';\n\n    SUMMARY = [\n        'Getting involved with ESG a great way to publicize your company, connect with Duke engineers, and',\n        'recruit. We offer several opportunities and events such as sponsorships, E-Socials, and E-Connects.' ,\n        'panies can also sponsor and support individual engineering clubs. There are many other ways to get ',\n        'involved and we encourage your company to contact us at esgduke@gmail.com or through the contact tab.',\n    ].join(' ');\n\n    //who it's being sent to, subject, body, cc (if any), text to display\n    EMAILS = [\n        [this.ESG_EMAIL,'Interested in Sponsorsing an E-Social','Hi!  I am FILL_IN_NAME who is interested in sponsorsing an E-Social with ESG.  Please let me know what steps I can take to get this done :)',this.INDUSTRY_RELATIONS, 'Host an E-Social'],\n        [this.ESG_EMAIL,'Interested in Helping Funding Clubs', 'Hi!  I am a representative of COMPANY_NAME_HERE, and we are interested in helping sponsor an engineering club at Duke.  Please let me know what steps I can take to get this done :)',this.STUDENT_GROUP_LIASION, 'Sponsor a Club'],\n        [this.PRESIDENT, 'Seeking to Speak with ESG Executive President', '',this.ESG_EMAIL, 'Contact our President']\n    ]\n    emailMap = new Map([\n        ['E-Social', this.EMAILS[0]],\n        ['Club Sponsor', this.EMAILS[1]],\n        ['President', this.EMAILS[2]]\n    ])\n\n    CONTENT = [\n        'Our general contact email is esgduke@gmail.com',\n        'You can also contact individual board members',\n        'as well as the ESG President, Polin Liu Email: polin.liu [at] duke.edu'\n    ]\n\n    createEmail(info){\n        return (\n            <a className = 'center' rel=\"noopener noreferrer\" href={this.createLink(info)} target=\"_blank\"  ><Button size='massive'>{info[4]}</Button></a>\n        )\n    }\n\n    createLink(info){\n        var to = info[0];\n        var cc = info[3];\n        var subject = info[1];\n        var body = info[2];\n        return ('mailto:'+ to + '?cc=' + cc + '&subject=' + subject + '&body=' + body);\n    }\n\n    \n    render(){\n        return(\n            <Segment className='center'>\n                <div >\n          <div >{this.CONTENT[0]}</div> <br/>\n          <div >{this.CONTENT[1]}</div> <br/>\n          <div >{this.CONTENT[2]}</div> <br/>\n                </div>\n\n\n            <p >\n                {this.SUMMARY} \n            </p>\n            <Grid>\n                <GridRow >\n                {this.createEmail(this.emailMap.get('E-Social'))}\n                {this.createEmail(this.emailMap.get('Club Sponsor'))}\n                {this.createEmail(this.emailMap.get('President'))}\n                </GridRow>\n            </Grid>\n            </Segment>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}