{"ast":null,"code":"var _jsxFileName = \"/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js\";\nimport React, { Component } from 'react';\nimport { Grid, GridRow } from 'semantic-ui-react';\nimport { WindowContext } from './WindowContext';\nexport default class GridColumnSections extends Component {\n  constructor(...args) {\n    super(...args);\n    this.sectionMap = new Map();\n    this.originalColumnsPerRow = 1;\n    this.changingColumnsPerRow = 1;\n    this.originalClassNombre = 'leftCentered';\n    this.changingclassNombre = 'leftCentered';\n  }\n\n  setMap(map) {\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow) {\n    this.originalColumnsPerRow = perRow;\n  }\n\n  setClassName(className) {\n    this.originalClassNombre = className;\n  }\n\n  setChangingClassName(className) {\n    this.changingclassNombre = className;\n  }\n\n  getClassName() {\n    return this.changingclassNombre;\n  }\n\n  createColumns() {\n    var index = 0;\n    var columns = [];\n\n    for (let key of this.sectionMap.keys()) {\n      columns[index] = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gridColumnRow\",\n        key: key,\n        style: {\n          width: Math.round(100 / this.changingColumnsPerRow) + '%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, key), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, this.sectionMap.get(key)));\n      index += 1;\n    }\n\n    return columns;\n  }\n\n  createColumnRows(context) {\n    if (context.width < context.shrunkWidth) {\n      this.changingColumnsPerRow = 1;\n      this.setChangingClassName('centerCentered');\n    } else {\n      this.changingColumnsPerRow = this.originalColumnsPerRow;\n      this.changingclassNombre = this.originalClassNombre;\n    }\n\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i += this.changingColumnsPerRow) {\n      rows[counter] = /*#__PURE__*/React.createElement(GridRow, {\n        key: counter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, columns.slice(i, i + this.changingColumnsPerRow));\n      counter += 1;\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, rows);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WindowContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, props => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        className: this.getClassName(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, this.createColumnRows(props));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js"],"names":["React","Component","Grid","GridRow","WindowContext","GridColumnSections","sectionMap","Map","originalColumnsPerRow","changingColumnsPerRow","originalClassNombre","changingclassNombre","setMap","map","setColumnsPerRow","perRow","setClassName","className","setChangingClassName","getClassName","createColumns","index","columns","key","keys","width","Math","round","get","createColumnRows","context","shrunkWidth","counter","rows","i","length","slice","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Grid, GridRow} from 'semantic-ui-react';\nimport {WindowContext} from './WindowContext'\n\n\n\nexport default class GridColumnSections extends Component {\n  sectionMap = new Map();\n  originalColumnsPerRow = 1;\n  changingColumnsPerRow = 1;\n  originalClassNombre = 'leftCentered'\n  changingclassNombre = 'leftCentered'\n\n  setMap(map){\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow){\n      this.originalColumnsPerRow = perRow;\n  }\n\n  setClassName(className){\n    this.originalClassNombre = className;\n  }\n\n  setChangingClassName(className){\n    this.changingclassNombre = className;\n  }\n\n  getClassName(){\n    return this.changingclassNombre;\n  }\n\n  createColumns(){\n    var index = 0;\n    var columns = []\n    for (let key of this.sectionMap.keys()){\n        columns[index] = (\n          <div className = 'gridColumnRow' key={key} style={{width: Math.round(100/this.changingColumnsPerRow) + '%'}}>\n           \n              <h3>{key}</h3> <br/>\n              <div>{this.sectionMap.get(key)}</div>\n             \n          </div>\n        )\n        index+=1;\n    }\n    return columns;\n  }\n\n  createColumnRows(context){\n    if (context.width < context.shrunkWidth){\n      this.changingColumnsPerRow = 1;\n      this.setChangingClassName('centerCentered')\n    }\n    else {\n      this.changingColumnsPerRow = this.originalColumnsPerRow;\n      this.changingclassNombre = this.originalClassNombre;\n    }\n\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i+=this.changingColumnsPerRow){\n  \n      rows[counter] = (\n        \n        <GridRow key={counter}>\n          {columns.slice(i,i+this.changingColumnsPerRow)}\n        </GridRow>\n      )\n      counter+=1;\n    }\n    return <Grid>{rows}</Grid>;\n  }\n\n \n    render() {\n      return(\n        <div>\n\n        <WindowContext.Consumer>\n           {(props) => {\n            return(\n                <div style={{width: '100%' }}className={this.getClassName()}> \n                  {this.createColumnRows(props)}\n                </div>\n            )\n           }}\n           </WindowContext.Consumer>\n           </div>\n      )\n      }\n    \n}\n\n  \n"]},"metadata":{},"sourceType":"module"}