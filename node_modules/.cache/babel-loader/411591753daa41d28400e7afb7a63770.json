{"ast":null,"code":"var _jsxFileName = \"/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js\";\nimport React, { Component } from 'react';\nimport { Grid, GridColumn, GridRow } from 'semantic-ui-react';\nimport { WindowContext } from './WindowContext';\nexport default class GridColumnSections extends Component {\n  constructor(...args) {\n    super(...args);\n    this.sectionMap = new Map();\n    this.columnsPerRow = 1;\n    this.classNombre = 'leftCentered';\n  }\n\n  setMap(map) {\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow) {\n    this.columnsPerRow = perRow;\n  }\n\n  setClassName(className) {\n    this.classNombre = className;\n  }\n\n  getClassName() {\n    return this.classNombre;\n  }\n\n  createColumns() {\n    var index = 0;\n    var columns = [];\n\n    for (let key of this.sectionMap.keys()) {\n      columns[index] = /*#__PURE__*/React.createElement(GridColumn, {\n        key: key,\n        width: Math.round(12 / this.columnsPerRow),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, key), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, this.sectionMap.get(key)));\n      index += 1;\n    }\n\n    return columns;\n  }\n\n  createColumnRows(context) {\n    console.log(context.width < context.shrunkWidth);\n    this.columnsPerRow = context.width < context.shrunkWidth ? 1 : this.columnsPerRow;\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i += this.columnsPerRow) {\n      rows[counter] = /*#__PURE__*/React.createElement(GridRow, {\n        key: counter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, columns.slice(i, i + this.columnsPerRow));\n      counter += 1;\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, rows);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WindowContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, props => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.getClassName(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, props.width, this.createColumnRows(props));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/wyattfocht/Documents/Website Projects/ESGWebsite/src/Components/GridColumnSections.js"],"names":["React","Component","Grid","GridColumn","GridRow","WindowContext","GridColumnSections","sectionMap","Map","columnsPerRow","classNombre","setMap","map","setColumnsPerRow","perRow","setClassName","className","getClassName","createColumns","index","columns","key","keys","Math","round","get","createColumnRows","context","console","log","width","shrunkWidth","counter","rows","i","length","slice","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Grid, GridColumn, GridRow} from 'semantic-ui-react';\nimport {WindowContext} from './WindowContext'\n\n\n\nexport default class GridColumnSections extends Component {\n  sectionMap = new Map();\n  columnsPerRow = 1;\n  classNombre = 'leftCentered'\n\n  setMap(map){\n    this.sectionMap = map;\n  }\n\n  setColumnsPerRow(perRow){\n      this.columnsPerRow = perRow;\n  }\n\n  setClassName(className){\n    this.classNombre = className;\n  }\n\n  getClassName(){\n    return this.classNombre;\n  }\n\n  createColumns(){\n    var index = 0;\n    var columns = []\n    for (let key of this.sectionMap.keys()){\n        columns[index] = (\n          <GridColumn key={key} width={Math.round(12/this.columnsPerRow)}>\n           \n              <h3>{key}</h3> <br/>\n              <div>{this.sectionMap.get(key)}</div>\n             \n          </GridColumn>\n        )\n        index+=1;\n    }\n    return columns;\n  }\n\n  createColumnRows(context){\n    console.log(context.width < context.shrunkWidth)\n    this.columnsPerRow = (context.width < context.shrunkWidth) ? 1 : this.columnsPerRow;\n    const columns = this.createColumns();\n    var counter = 0;\n    var rows = [];\n\n    for (var i = 0; i < columns.length; i+=this.columnsPerRow){\n  \n      rows[counter] = (\n        \n        <GridRow key={counter}>\n          {columns.slice(i,i+this.columnsPerRow)}\n        </GridRow>\n      )\n      counter+=1;\n    }\n    return <Grid>{rows}</Grid>;\n  }\n\n \n    render() {\n      return(\n        <div>\n\n        <WindowContext.Consumer>\n           {(props) => {\n            return(\n                <div className={this.getClassName()}> \n                    {props.width}\n                  {this.createColumnRows(props)}\n                </div>\n            )\n           }}\n           </WindowContext.Consumer>\n           </div>\n      )\n      }\n    \n}\n\n  \n"]},"metadata":{},"sourceType":"module"}